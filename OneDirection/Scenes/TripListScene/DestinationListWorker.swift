//
//  DestinationListWorker.swift
//  OneDirection
//
//  Created by Ashish Nautiyal on 3/9/19.
//  Copyright (c) 2019 Ashish  Nautiyal. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

class DestinationListWorker
{
    func getTrips(completion: @escaping ([Trip], Error?) -> Void)
    {
        MainWorker.taskForGETRequest(url: MainWorker.Endpoints.getTrips.url, responseType: DestinationList.Response.self){ (response,error)
            in
            if let response = response {
                completion(response.data.filter(){ !$0.deleted},nil)
            }
            else {
                completion([],error)
            }
        }
    }
    
    func sendTicketrequest(body: DestinationList.RequestTicket,completion: @escaping (Bool, String) -> Void)
    {
        var params = [String:String] ()
        params ["uid"] = body.uid
        params ["trip_id"] = body.trip_id
        params ["status"] = body.status
        params ["creater_id"] = body.creater_id
        MainWorker.taskForPOSTRequest(url: MainWorker.Endpoints.bookTicket.url, responseType: DestinationList.ResponseTicketBooking.self, parameters: params){ (response,error)
            in
            if let response = response {
                
                completion( response.success, String(response.uid))
            }
            else {
                completion(false,error?.localizedDescription ?? "")
            }
        }
    }
    
    func deleteTicketrequest(body: DestinationList.RequestDeleteTicket,completion: @escaping (Bool, String) -> Void)
    {
        var params = [String:String] ()
        params ["uid"] = body.uid
        params ["trip_id"] = body.trip_id
        MainWorker.taskForPOSTRequest(url: MainWorker.Endpoints.deleteTicket.url, responseType: DestinationList.ResponseDeleteTicket.self, parameters: params){ (response,error)
            in
            if let response = response {
                
                completion( response.success, response.data)
            }
            else {
                completion(false,error?.localizedDescription ?? "")
            }
        }
    }
    
    func deleteTrip(body: DestinationList.RequestDeleteTrip,completion: @escaping (Bool, String) -> Void)
    {
        var params = [String:String] ()
        params ["trip_id"] = body.trip_id
        MainWorker.taskForPOSTRequest(url: MainWorker.Endpoints.deleteTrip.url, responseType: DestinationList.ResponseTicketBooking.self, parameters: params){ (response,error)
            in
            if let response = response {
                
                completion( response.success, String(response.uid))
            }
            else {
                completion(false,error?.localizedDescription ?? "")
            }
        }
    }
}
