//
//  TripRequestsInteractor.swift
//  OneDirection
//
//  Created by Ashish Nautiyal on 3/22/19.
//  Copyright (c) 2019 Ashish  Nautiyal. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol TripRequestsBusinessLogic
{
    func getTripRequests(trip_id : String)
    func updateTicket(request: TripRequests.Something.Request)
}

protocol TripRequestsDataStore
{
    //var name: String { get set }
}

class TripRequestsInteractor: TripRequestsBusinessLogic, TripRequestsDataStore
{
    var presenter: TripRequestsPresentationLogic?
    var worker: TripRequestsWorker?
    
    func updateTicket(request: TripRequests.Something.Request) {
        worker = TripRequestsWorker()
        worker?.sendTicketrequest(body : request,completion: {(success,message)
            in
            self.presenter?.updateBookingstatus(success: success, message: message,posintion: request.position)
        }
        )
    }
    
    func getTripRequests(trip_id : String) {
        worker = TripRequestsWorker()
        worker?.getTripRequests(trip_id: trip_id, completion: {(tripRequests,error)
            in
            self.presenter?.presentList(tripRequests: tripRequests, error: error)
        }
        )
    }
}
