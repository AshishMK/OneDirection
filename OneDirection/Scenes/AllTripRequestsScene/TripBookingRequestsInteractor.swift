//
//  TripBookingRequestsInteractor.swift
//  OneDirection
//
//  Created by Ashish Nautiyal on 3/20/19.
//  Copyright (c) 2019 Ashish  Nautiyal. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol TripBookingRequestsBusinessLogic
{
    func getMyTripRequests()
    func updateTicket(request: TripBookingRequests.Request)
}

protocol TripBookingRequestsDataStore
{
    //var name: String { get set }
}

class TripBookingRequestsInteractor: TripBookingRequestsBusinessLogic, TripBookingRequestsDataStore
{
    var presenter: TripBookingRequestsPresentationLogic?
    var worker: TripBookingRequestsWorker?
    func updateTicket(request: TripBookingRequests.Request) {
        worker = TripBookingRequestsWorker()
        worker?.sendTicketrequest(body : request,completion: {(success,message)
            in
            self.presenter?.updateBookingstatus(success: success, message: message,posintion: request.position)
        }
        )
    }
    // MARK: Do something
    func getMyTripRequests() {
        worker = TripBookingRequestsWorker()
        worker?.getMyTripRequests(completion: {(tripRequests,error)
            in
            self.presenter?.presentList(tripRequests: tripRequests, error: error)
        }
        )
    }
    
}
