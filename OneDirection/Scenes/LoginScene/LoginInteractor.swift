//
//  LoginInteractor.swift
//  OneDirection
//
//  Created by Ashish Nautiyal on 3/7/19.
//  Copyright (c) 2019 Ashish  Nautiyal. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol LoginBusinessLogic
{
    func getOTP(request: Login.GetOTP.RequestOTP)
    func verifyOTP(request: Login.VerifyOTP.RequestVerification)
}

protocol LoginDataStore
{
    //var name: String { get set }
}

class LoginInteractor: LoginBusinessLogic, LoginDataStore
{
    
    
    var presenter: LoginPresentationLogic?
    var worker: LoginWorker?
   
    // MARK: Do something
    
    func getOTP(request: Login.GetOTP.RequestOTP)
    {
        worker = LoginWorker()
        worker?.getOTP(phone: request.phone, name: request.name, completion: {
            (sucess,message)
            in
            
            self.presenter?.handleOTPResponse(response: sucess, message : message)
        })
        
    }
    func verifyOTP(request: Login.VerifyOTP.RequestVerification) {
        worker = LoginWorker()
        worker?.verifyOTP(body: request, completion: {
            (sucess,message)
            in
            
            self.presenter?.handleVerifyOTPResponse(response: sucess, message : message)
        })
    }
}
