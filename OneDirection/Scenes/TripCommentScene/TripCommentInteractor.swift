//
//  TripCommentInteractor.swift
//  OneDirection
//
//  Created by Ashish Nautiyal on 4/4/19.
//  Copyright (c) 2019 Ashish  Nautiyal. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol TripCommentBusinessLogic
{
    func getComments(trip_id: String)
    func sendComment(comment: Comment)
    func deleteComment(id: String,position : Int)
}

protocol TripCommentDataStore
{
    //var name: String { get set }
}

class TripCommentInteractor: TripCommentBusinessLogic, TripCommentDataStore
{
    
    var presenter: TripCommentPresentationLogic?
    var worker: TripCommentWorker?
    //var name: String = ""
    
    // MARK: Do something
    
    func getComments(trip_id: String)
    {
        worker = TripCommentWorker()
        worker?.getTripComments(trip_id: trip_id, completion: {(comments,error)
            in
            self.presenter?.presentList(comments: comments, error: error)
        })
    }
    func sendComment(comment: Comment) {
        worker = TripCommentWorker()
        worker?.sendCommentRequest(body: comment, completion: {(comment,error)
            in
            self.presenter?.addComment(comment: comment, error: error)
        })
    }
    func deleteComment(id: String,  position: Int) {
        worker = TripCommentWorker()
        worker?.deleteCommentRequest(id: id, completion: {(comment,error)
            in
            self.presenter?.deleteComment(comment: comment, error: error,position: position)
        })
    }
    
}
